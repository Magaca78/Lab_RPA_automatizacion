name: Lab_auto_MateoGalvisC

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main
  schedule:
    - cron: '0 0 * * *' # Ejecutar todos los días a medianoche

jobs:
  # Pipeline de pruebas
  tests:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Set Up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '16'

      - name: Install Dependencies
        run: npm install

      - name: Run Unit Tests
        run: npm test

  # Pipeline de construcción
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Set Up Java
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'temurin'

      - name: Build Project
        run: ./gradlew build

  # Pipeline de análisis de código
  code-analysis:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Run Linter
        run: npm run lint

      - name: Run Static Analysis
        uses: github/codeql-action/init@v2
        with:
          languages: javascript

      - name: Perform Code Scanning
        uses: github/codeql-action/analyze@v2

  # Pipeline de pruebas de integración
  integration-tests:
    runs-on: ubuntu-latest
    needs: [tests]

    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Set Up Environment
        run: npm install

      - name: Run Integration Tests
        run: npm run test:integration

  # Pipeline de pruebas de rendimiento
  performance-tests:
    runs-on: ubuntu-latest
    needs: [build]

    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Set Up Environment
        run: npm install

      - name: Run Performance Tests
        run: npm run test:performance

  # Pipeline de despliegue
  deploy:
    runs-on: ubuntu-latest
    needs: [tests, build]

    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Set Up AWS CLI
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-1

      - name: Deploy to S3
        run: aws s3 sync ./build s3://my-bucket-name --delete

      - name: Invalidate CloudFront Cache
        run: aws cloudfront create-invalidation --distribution-id ${{ secrets.CLOUDFRONT_DISTRIBUTION_ID }} --paths "/*"

  # Pipeline de publicación
  publish:
    runs-on: ubuntu-latest
    needs: [build]

    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Publish to NPM
        run: npm publish
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}

  # Pipeline de pruebas de seguridad
  security-tests:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Run Dependency Check
        run: npm audit --production

      - name: Run Security Scan
        uses: aquasecurity/trivy-action@master
        with:
          image-ref: node:16

  # Pipeline de documentación
  documentation:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Generate Documentation
        run: npm run docs

      - name: Deploy Documentation
        uses: peaceiris/actions-gh-pages@v3
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_dir: ./docs

  # Pipeline de monitoreo post-despliegue
  post-deploy-monitoring:
    runs-on: ubuntu-latest
    needs: [deploy]

    steps:
      - name: Monitor Application
        run: curl -f https://my-application-url.com/health || exit 1
